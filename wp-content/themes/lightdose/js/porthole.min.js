(function(){var a=false,b=/xyz/.test(function(){xyz})?/\b_super\b/:/.*/;this.Class=function(){};Class.extend=function(g){var f=this.prototype;a=true;var e=new this();a=false;for(var d in g){e[d]=typeof g[d]=="function"&&typeof f[d]=="function"&&b.test(g[d])?(function(h,i){return function(){var k=this._super;this._super=f[h];var j=i.apply(this,arguments);this._super=k;return j}})(d,g[d]):g[d]}function c(){if(!a&&this.init){this.init.apply(this,arguments)}}c.prototype=e;c.prototype.constructor=c;c.extend=arguments.callee;return c}})();(function(c){var b={trace:function(d){if(c.console!==undefined){c.console.log("Porthole: "+d)}},error:function(d){if(c.console!==undefined){c.console.error("Porthole: "+d)}}};b.WindowProxy=function(){};b.WindowProxy.prototype={post:function(e,d){},addEventListener:function(d){},removeEventListener:function(d){}};b.WindowProxyBase=Class.extend({init:function(d){if(d===undefined){d=""}this.targetWindowName=d;this.origin=c.location.protocol+"//"+c.location.host;this.eventListeners=[]},getTargetWindowName:function(){return this.targetWindowName},getOrigin:function(){return this.origin},getTargetWindow:function(){return b.WindowProxy.getTargetWindow(this.targetWindowName)},post:function(e,d){if(d===undefined){d="*"}this.dispatchMessage({data:e,sourceOrigin:this.getOrigin(),targetOrigin:d,sourceWindowName:c.name,targetWindowName:this.getTargetWindowName()})},addEventListener:function(d){this.eventListeners.push(d);return d},removeEventListener:function(g){var d;try{d=this.eventListeners.indexOf(g);this.eventListeners.splice(d,1)}catch(h){this.eventListeners=[]}},dispatchEvent:function(f){var d;for(d=0;d<this.eventListeners.length;d++){try{this.eventListeners[d](f)}catch(g){}}}});b.WindowProxyLegacy=b.WindowProxyBase.extend({init:function(d,e){this._super(e);if(d!==null){this.proxyIFrameName=this.targetWindowName+"ProxyIFrame";this.proxyIFrameLocation=d;this.proxyIFrameElement=this.createIFrameProxy()}else{this.proxyIFrameElement=null;throw new Error("proxyIFrameUrl can't be null")}},createIFrameProxy:function(){var d=document.createElement("iframe");d.setAttribute("id",this.proxyIFrameName);d.setAttribute("name",this.proxyIFrameName);d.setAttribute("src",this.proxyIFrameLocation);d.setAttribute("frameBorder","1");d.setAttribute("scrolling","auto");d.setAttribute("width",30);d.setAttribute("height",30);d.setAttribute("style","position: absolute; left: -100px; top:0px;");if(d.style.setAttribute){d.style.setAttribute("cssText","position: absolute; left: -100px; top:0px;")}document.body.appendChild(d);return d},dispatchMessage:function(e){var d=c.encodeURIComponent;if(this.proxyIFrameElement){var f=this.proxyIFrameLocation+"#"+d(b.WindowProxy.serialize(e));this.proxyIFrameElement.setAttribute("src",f);this.proxyIFrameElement.height=this.proxyIFrameElement.height>50?50:100}}});b.WindowProxyHTML5=b.WindowProxyBase.extend({init:function(d,e){this._super(e);this.eventListenerCallback=null},dispatchMessage:function(d){this.getTargetWindow().postMessage(b.WindowProxy.serialize(d),d.targetOrigin)},addEventListener:function(e){if(this.eventListeners.length===0){var d=this;this.eventListenerCallback=function(f){d.eventListener(d,f)};c.addEventListener("message",this.eventListenerCallback,false)}return this._super(e)},removeEventListener:function(d){this._super(d);if(this.eventListeners.length===0){c.removeEventListener("message",this.eventListenerCallback);this.eventListenerCallback=null}},eventListener:function(e,d){var f=b.WindowProxy.unserialize(d.data);if(f&&(e.targetWindowName==""||f.sourceWindowName==e.targetWindowName)){e.dispatchEvent(new b.MessageEvent(f.data,d.origin,e))}}});if(typeof c.postMessage!=="function"){/*b.trace("Using legacy browser support");*/b.WindowProxy=b.WindowProxyLegacy.extend({})}else{/*b.trace("Using built-in browser support");*/b.WindowProxy=b.WindowProxyHTML5.extend({})}b.WindowProxy.serialize=function(d){if(typeof JSON==="undefined"){throw new Error("Porthole serialization depends on JSON!")}return JSON.stringify(d)};b.WindowProxy.unserialize=function(g){if(typeof JSON==="undefined"){throw new Error("Porthole unserialization dependens on JSON!")}try{var d=JSON.parse(g)}catch(f){return false}return d};b.WindowProxy.getTargetWindow=function(d){if(d===""){return top}else{if(d==="top"||d==="parent"){return c[d]}}return parent.frames[d]};b.MessageEvent=function a(f,d,e){this.data=f;this.origin=d;this.source=e};b.WindowProxyDispatcher={forwardMessageEvent:function(i){var g,h=c.decodeURIComponent,f,d;if(document.location.hash.length>0){g=b.WindowProxy.unserialize(h(document.location.hash.substr(1)));f=b.WindowProxy.getTargetWindow(g.targetWindowName);d=b.WindowProxyDispatcher.findWindowProxyObjectInWindow(f,g.sourceWindowName);if(d){if(d.origin===g.targetOrigin||g.targetOrigin==="*"){d.dispatchEvent(new b.MessageEvent(g.data,g.sourceOrigin,d))}else{b.error("Target origin "+d.origin+" does not match desired target of "+g.targetOrigin)}}else{b.error("Could not find window proxy object on the target window")}}},findWindowProxyObjectInWindow:function(d,g){var f;if(d.RuntimeObject){d=d.RuntimeObject()}if(d){for(f in d){if(d.hasOwnProperty(f)){try{if(d[f]!==null&&typeof d[f]==="object"&&d[f] instanceof d.Porthole.WindowProxy&&d[f].getTargetWindowName()===g){return d[f]}}catch(h){}}}}return null},start:function(){if(c.addEventListener){c.addEventListener("resize",b.WindowProxyDispatcher.forwardMessageEvent,false)}else{if(document.body.attachEvent){c.attachEvent("onresize",b.WindowProxyDispatcher.forwardMessageEvent)}else{b.error("Cannot attach resize event")}}}};if(typeof c.exports!=="undefined"){c.exports.Porthole=b}else{c.Porthole=b}})(this);
/**	WebFont*/
function loadWebFont() {
	google.load( 'webfont', '1' );
};
document.write( '<script type="text/javascript" src="https://www.google.com/jsapi?callback=loadWebFont"></script>' );
$( window ).load( function() {
/**	*/
/**	style*/
	var element = document.createElement( 'style' );
	element.id = 'style';
	element.type = 'text/css';
	document.getElementsByTagName( 'head' )[ 0 ].appendChild( element );
/**	*/
    var windowProxy = new Porthole.WindowProxy( 'http://widgets.itembridge.com/' );
    windowProxy.post( {
		'method' : 'dataObject',
		'dataObject' : dataObject
	} );
    windowProxy.addEventListener( function( event ) {
		var exportBuffer = false;
		switch( event.data.method ) {
			case 'webfont' : {
				if( WebFont ) {
					event.data.family = ( event.data.family ) ? String( event.data.family.replace( /[^a-zA-Z 0-9.,-_]+/g, '' ) ) : null;
					if( event.data.family )
						WebFont.load( {
							google : {
								families : [
									event.data.family
								]
							}
						} );
				};
			};
			break;
			case 'handler' : {
				if( handler[ event.data.handler ] != 'undefined' ) {
					handler[ event.data.handler ].call( Boolean( event.data.parameter ) );
					handler[ event.data.handler ].last = Boolean( event.data.parameter );
				};
				exportBuffer = true;
			};
			break;
			case 'scroll' : {
				event.data.scroll = ( event.data.scroll ) ? Math.abs( Number( event.data.scroll ) ) : 0;
				$( 'html, body' ).scrollTop( event.data.scroll );
				exportBuffer = true;
			};
			break;
			case 'default' : {
				event.data.font = ( event.data.font ) ? String( event.data.font.replace( /[^a-zA-Z 0-9.,-_]+/g, '' ) ) : 'sans-serif';
				event.data.size = ( event.data.size ) ? Number( event.data.size ) : 16;

				event.data.red = ( event.data.red ) ? Number( event.data.red ) : 0;
				event.data.green = ( event.data.green ) ? Number( event.data.green ) : 0;
				event.data.blue = ( event.data.blue ) ? Number( event.data.blue ) : 0;

				event.data.beginRed = ( event.data.beginRed ) ? Number( event.data.beginRed ) : 0;
				event.data.beginGreen = ( event.data.beginGreen ) ? Number( event.data.beginGreen ) : 0;
				event.data.beginBlue = ( event.data.beginBlue ) ? Number( event.data.beginBlue ) : 0;
				event.data.endRed = ( event.data.endRed ) ? Number( event.data.endRed ) : 0;
				event.data.endGreen = ( event.data.endGreen ) ? Number( event.data.endGreen ) : 0;
				event.data.endBlue = ( event.data.endBlue ) ? Number( event.data.endBlue ) : 0;
				
				var buffer = style
					.replace( /\[F\]/g, event.data.font )
					.replace( /\[S\]/g, event.data.size )

					.replace( /\[R\]/g, event.data.red )
					.replace( /\[G\]/g, event.data.green )
					.replace( /\[B\]/g, event.data.blue )

					.replace( /\[BR\]/g, event.data.beginRed )
					.replace( /\[BG\]/g, event.data.beginGreen )
					.replace( /\[BB\]/g, event.data.beginBlue )
					.replace( /\[ER\]/g, event.data.endRed )
					.replace( /\[EG\]/g, event.data.endGreen )
					.replace( /\[EB\]/g, event.data.endBlue );
					
				document.getElementById( 'style' ).innerHTML = buffer;
				exportBuffer = true;
			};
			break;
			default : {
				/*
					$( window ).mousewheel( function( event, delta, deltaX, deltaY ) {
						windowProxy.post( {
							'method' : 'scroll',
							//'scroll' : $( document ).scrollTop(),
							'event' : event,
							'delta' : delta,
							'deltaX' : deltaX,
							'deltaY' : deltaY
						} );
					} );
					$( window ).resize( function() {
						windowProxy.post( {
							'method' : 'resize',
							'height' : $( document ).height()
						} );
					} );
				*/
			};
			break;
		};
		if( exportBuffer ) {
			buffer = document.getElementById( 'style' ).outerHTML + '<script type="text/javascript">$(document).ready(function(){';
			$.each( handler, function( index, value ) {
				buffer += "handler['" + index + "'].call(" + value.last + ');';
			} );
			buffer += '});</script>';
			windowProxy.post( {
				'method' : 'export',
				'export' : buffer
			} );
		};
    } );
} );
